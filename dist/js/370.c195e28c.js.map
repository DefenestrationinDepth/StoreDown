{"version":3,"file":"js/370.c195e28c.js","mappings":"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","sources":["webpack://storedown/./src/components/List.vue?f0db","webpack://storedown/src/components/List.vue","webpack://storedown/./src/components/List.vue?65f8","webpack://storedown/./src/components/List.vue","webpack://storedown/./src/views/Tree.vue?15b4","webpack://storedown/src/views/Tree.vue","webpack://storedown/./src/views/Tree.vue?23e0","webpack://storedown/./src/views/Tree.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('v-data-table',{attrs:{\"headers\":_vm.headers,\"pagination\":_vm.pagination,\"items\":_vm.data.rows,\"loading\":_vm.loading,\"total-items\":_vm.data.total_rows,\"rows-per-page-items\":[10,50,100,1000]},on:{\"update:pagination\":function($event){_vm.pagination=$event}},scopedSlots:_vm._u([{key:\"items\",fn:function(props){return [_c('ListColumnTypes',{attrs:{\"props\":props,\"headers\":_vm.headers,\"rowClick\":_vm.rowClick}})]}},{key:\"no-data\",fn:function(){return [_c('v-alert',{attrs:{\"value\":!_vm.loading,\"color\":\"error\"}},[_vm._v(\" No data was found. \")])]},proxy:true}])})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<v-layout>\n  <v-flex xs12>\n    <v-data-table :headers=\"headers\" :pagination.sync=\"pagination\" :items=\"data.rows\" :loading=\"loading\" :total-items=\"data.total_rows\" :rows-per-page-items=\"[10,50,100,1000]\">\n      <template v-slot:items=\"props\">\n        <ListColumnTypes :props=\"props\" :headers=\"headers\" :rowClick=\"rowClick\" />\n      </template>\n\n      <template v-slot:no-data>\n        <v-alert :value=\"!loading\" color=\"error\">\n          No data was found.\n        </v-alert>\n      </template>\n    </v-data-table>\n  </v-flex>\n</v-layout>\n</template>\n\n<script>\nimport ListColumnTypes from '../components/ListColumnTypes'\n\nexport default {\n  components: {\n    ListColumnTypes\n  },\n  props: { // Example usage <List :headers=\"headers\" :loadData=\"loadData\" :rowClick=\"rowClick\" />\n    headers: Array,\n    rowClick: Function,\n    loadData: Function\n  },\n  watch: {\n    pagination: {\n      handler () {\n        this.getData()\n      },\n      deep: true\n    },\n    '$route' (to, from) {\n      this.getData()\n    }\n  },\n  data: () => ({\n    pagination: {},\n    loading: false,\n    data: {}\n  }),\n  // mounted () {\n  //   //Commented out. Pagination handler was calling getData\n  //   this.getData()\n  // },\n  methods: {\n    /**\n     * Calls loadData and handles pagination parameters and loading bar\n     */\n    getData: function () {\n      this.loading = true\n      this.data.rows = []\n      let start = (this.pagination.page - 1) * this.pagination.rowsPerPage\n\n      this.loadData(start, this.pagination.rowsPerPage).then((data) => {\n        this.data = data\n        this.loading = false\n      }).catch((error) => {\n        if (error.status === 404) {} else {\n          this.$toasted.info(`Error ${error}`)\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./List.vue?vue&type=template&id=324ee1c8&\"\nimport script from \"./List.vue?vue&type=script&lang=js&\"\nexport * from \"./List.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAlert } from 'vuetify/lib/components/VAlert';\nimport { VDataTable } from 'vuetify/lib/components/VDataTable';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VAlert,VDataTable,VFlex,VLayout})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"grid-list-lg\":\"\",\"fluid\":\"\"}},[_c('v-layout',[_c('v-flex',{attrs:{\"xs12\":\"\"}},[(!_vm.$route.query.prefix)?_c('h4',{staticClass:\"display-1\"},[_vm._v(\"Item tree\")]):_c('h5',{staticClass:\"headline\"},[_c('button',{on:{\"click\":function($event){return _vm.breadcrumbsClick(-1)}}},[_vm._v(\"Item tree\")]),_vm._v(\" / \"),_vm._l((_vm.prefix),function(p,i){return [_c('button',{key:p,on:{\"click\":function($event){return _vm.breadcrumbsClick(i)}}},[_vm._v(_vm._s(p))]),_vm._v(\" / \")]})],2)])],1),_c('List',{attrs:{\"headers\":_vm.headers,\"loadData\":_vm.loadData,\"rowClick\":_vm.rowClick}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<v-container grid-list-lg fluid>\n  <v-layout>\n    <v-flex xs12>\n      <h4 v-if=\"!$route.query.prefix\" class=\"display-1\">Item tree</h4>\n      <h5 v-else class=\"headline\">\n        <button @click=\"breadcrumbsClick(-1)\">Item tree</button>\n        /\n        <template v-for=\"(p, i) in prefix\">\n          <button :key=\"p\" @click=\"breadcrumbsClick(i)\">{{p}}</button>\n          /\n        </template>\n      </h5>\n\n    </v-flex>\n  </v-layout>\n  <!-- TODO QR code generator -->\n  <List :headers=\"headers\" :loadData=\"loadData\" :rowClick=\"rowClick\" />\n</v-container>\n</template>\n\n<script>\nimport {\n  ConfigService\n} from '../services/Config.js'\nimport DatabaseService from '../services/Database.js'\nimport List from '../components/List'\n\nconst RECORD_TO_PULL = 10000\n\nexport default {\n  components: {\n    List\n  },\n  data: () => ({\n    tree: { _items: [] },\n    headers: [],\n    pathField: false, // TODO if false, put message here how to enable list view\n    prefix: []\n  }),\n  watch: {\n    '$route' (to, from) {\n\n    }\n  },\n  mounted () {\n    this.loadHeaders()\n  },\n  methods: {\n    /**\n     * Hande logic for when a row is clicked\n     * @param  {[type]} props  [description]\n     * @param  {[type]} header [description]\n     */\n    rowClick: function (props) {\n      if (props.item.type === 'item') { return this.$router.push(`/entry/${props.item._id}`) }\n\n      return this.$router.push({\n        name: 'tree',\n        query: {\n          prefix: `${this.$route.query.prefix || ''}${props.item.name}/`\n        }\n      })\n    },\n\n    /**\n     * Handle a breadcrumb click\n     * @param  {[type]} index - index of breadcrumb part\n     */\n    breadcrumbsClick: function (index) {\n      let prefix = ''\n      if (index !== -1) {\n        prefix = `${this.prefix.slice(0, index + 1).join('/')}/`\n      }\n\n      if (prefix === this.$route.query.prefix) {\n        return\n      }\n\n      return this.$router.push({\n        name: 'tree',\n        query: {\n          prefix: prefix\n        }\n      })\n    },\n\n    /**\n     * Loads headers into this.headers\n     */\n    loadHeaders: function () {\n      if (!DatabaseService()) {\n        return\n      }\n\n      // Get config and headers\n      ConfigService.getConfigObject().then((config) => {\n        config.dataDefinition.forEach((group) => {\n          group.fields.forEach((item) => {\n            if (!item.showInTree) { return }\n\n            this.headers.push({\n              text: item.displayName,\n              value: item.name,\n              align: 'left',\n              item: item, // So you can access all the parameters. Above are given in the data table support format.\n              sortable: false\n            })\n          })\n        })\n      }).catch((error) => {\n        if (error.status === 404) {} else {\n          this.$toasted.info(`Error ${error}`)\n        }\n      })\n    },\n\n    /**\n      * Load, cache, and return prefix data to List component\n      * @param  {Number} [skip=0]    - start seek. Number of items to skip\n      * @param  {Number} [limit=100] - Number of items to pull\n      * @return {Promise}            - When resolved, return database data\n      */\n    loadData: function (skip = 0, limit = 100) {\n      this.prefix = (this.$route.query.prefix || '').slice(0, -1).toLowerCase().split('/')\n\n      /**\n       * Get the last path field and make sure there is a name field. Used to determine support for tree view.\n       * @param  {[type]} config [description]\n       * @return {String} - Returns path field name. This value is also set this.pathField\n       */\n      let findPathField = (config) => {\n        let hasName = false\n        config.dataDefinition.forEach(group => group.fields.forEach(field => {\n          if (field.name === 'name') {\n            hasName = true\n          }\n          if (field.type === 'path') {\n            this.pathField = field\n          }\n        }))\n\n        if (!hasName) {\n          this.pathField = false\n        } // No name, no tree view. Even if a path was found\n\n        return this.pathField\n      }\n\n      /**\n       * Build Tree and set it to this.tree\n       * @return {[type]} [description]\n       */\n      let buildTree = () => {\n        this.$toasted.info('Building tree cache')\n        return new Promise((resolve, reject) => {\n          ConfigService.getConfigObject().then((config) => {\n            let i = 0\n            if (!findPathField(config)) { return reject(new Error('Tree view not supported because a name field or field with type path is not set.')) }\n\n            let pathFieldName = this.pathField.name.charAt(0).toUpperCase() + this.pathField.name.slice(1)\n            let loopFunction = () => {\n              DatabaseService().getAllItems({ skip: i, limit: RECORD_TO_PULL }).then((data) => {\n                i += data.rows.length || 10// If no items are returned the database only has config. We need to add some manually so we dont loop forever\n\n                data.rows.forEach((item) => {\n                  let prefix = this.pathField.prefixes[(item[this.pathField.name] || '').toLowerCase()]\n                  if (!prefix) {\n                    prefix = '' // Blanks it out instead of printing undefined.\n                  }\n\n                  let path = 'none' // Special case if no path is given use None\n                  if (item[this.pathField.name]) {\n                    path = `${prefix}${item[this.pathField.name]}`.toLowerCase() // Lower case everything because computer science\n                  }\n\n                  if (path.substr(-1) !== '/') { // Make sure path ends with a /\n                    path += '/'\n                  }\n\n                  path = path.slice(0, -1) // So we can chop it off\n\n                  let pathsSplit = path.split('/')\n                  let subTree = this.tree\n                  pathsSplit.forEach((pathPart) => {\n                    // TODO trim this. iPhone adds spaces between parts. `20243 / foo` should = `20243/foo`\n                    if (!subTree[pathPart]) {\n                      subTree[pathPart] = {\n                        _items: []\n                      }\n                      subTree._items.unshift({\n                        name: pathPart,\n                        type: '_path',\n                        _id: pathFieldName\n                      })\n                    }\n\n                    subTree = subTree[pathPart]\n                  })\n\n                  subTree._items.push(item)\n                })\n\n                if ((i + 10) < data.total_rows) { return loopFunction() }// +10 to account for configuration that shows up in data.total_rows but not in this return\n\n                return resolve(this.tree)\n              }).catch(reject)\n            }\n\n            // Engage\n            return loopFunction()\n          }).catch(reject)\n        })\n      }\n\n      /**\n       * Internal method to load sub tree for a given prefix\n       * @param  {Array} prefix - prefix parts array\n       * @return {Object} - Sub tree for that path\n       */\n      let loadPrefix = (prefix) => {\n        // We already have a cache\n        let subTree = this.tree\n        prefix.forEach((path) => {\n          if (!subTree[path]) { return subTree._items }// Nothing found\n          return subTree = subTree[path]\n        })\n\n        return {\n          total_rows: subTree._items.length,\n          rows: subTree._items.slice(skip, skip + limit)\n        }\n      }\n\n      // Execute\n      return new Promise((resolve, reject) => {\n        if (this.tree._items.length) { return resolve(loadPrefix(this.prefix)) }// If tree is already set Ether prefixes or\n\n        buildTree().then(() => { // Build a cache\n          return resolve(loadPrefix(this.prefix))\n        })// .catch(reject)\n      })\n    }\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Tree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Tree.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tree.vue?vue&type=template&id=168a3efa&\"\nimport script from \"./Tree.vue?vue&type=script&lang=js&\"\nexport * from \"./Tree.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VContainer,VFlex,VLayout})\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","headers","pagination","data","rows","loading","total_rows","on","$event","scopedSlots","_u","key","fn","props","rowClick","_v","proxy","staticRenderFns","components","ListColumnTypes","Array","Function","loadData","watch","handler","getData","deep","to","from","methods","start","page","rowsPerPage","then","catch","error","status","$toasted","info","component","VAlert","$route","query","prefix","staticClass","breadcrumbsClick","_l","p","i","_s","RECORD_TO_PULL","List","tree","_items","pathField","mounted","loadHeaders","item","type","$router","push","_id","name","index","slice","join","Database","Config","config","dataDefinition","forEach","group","fields","showInTree","text","displayName","value","align","sortable","skip","limit","toLowerCase","split","findPathField","hasName","field","buildTree","Promise","resolve","reject","Error","pathFieldName","charAt","toUpperCase","loopFunction","getAllItems","length","prefixes","path","substr","pathsSplit","subTree","pathPart","unshift","loadPrefix","VContainer"],"sourceRoot":""}